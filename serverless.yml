# serverless.yml
service: taxdown-customer-api
frameworkVersion: '4'


provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-2
  environment:
    CUSTOMER_TABLE: ${self:service}-customers-${opt:stage, 'dev'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:Scan
      Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.CUSTOMER_TABLE}

functions:
  api:
    handler: src/index.handler
    events:
    - http:
      path: "api/v1/${opt:stage, 'dev'}/customers"
      method: get
    - http:
      path: "api/v1/${opt:stage, 'dev'}/customers"
      method: post
    - http:
      path: "api/v1/${opt:stage, 'dev'}/customers/{id}"
      method: get
    - http:
      path: "api/v1/${opt:stage, 'dev'}/customers/{id}"
      method: put
    - http:
      path: "api/v1/${opt:stage, 'dev'}/customers/{id}"
      method: delete
    - http:
      path: "api/v1/${opt:stage, 'dev'}/customers/{id}/add-credit"
      method: post

resources:
  Resources:
    CustomerTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.CUSTOMER_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

plugins:
  - serverless-offline